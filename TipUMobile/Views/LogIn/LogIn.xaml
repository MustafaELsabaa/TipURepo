<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:renderers="clr-namespace:VideoBrek.Extensions"
             x:Class="VideoBrek.Views.LogIn.LogIn"
             xmlns:converters="clr-namespace:VideoBrek.Converters"
             xmlns:behaviors="clr-namespace:VideoBrek.Behaviour"
             NavigationPage.HasBackButton="False">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:ValidationErrorConverter x:Key="ValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <AbsoluteLayout Padding="0" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
            <renderers:GradientLayout  Orientation="Vertical" ColorsList="#1976D2,#061519" Mode="ToBottom" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <renderers:GradientLayout.Padding>
                    <Thickness  Left="{StaticResource Default2Margin}" Right="{StaticResource Default2Margin}" Top="20" Bottom="{StaticResource Default2Margin}" />
                </renderers:GradientLayout.Padding>
                <StackLayout Orientation="Horizontal" VerticalOptions="Center" HorizontalOptions="End" HeightRequest="100">
                    <Button Command="{Binding ClosedPresentPage}" FontSize="Medium" Text="X" FontAttributes="Bold" CornerRadius="13" HeightRequest="26" Padding="0" WidthRequest="26" HorizontalOptions="Center" VerticalOptions="Start" BackgroundColor="#6600" TextColor="White" x:Name="btnClosedPage" AbsoluteLayout.LayoutBounds="1,1,1,1" AbsoluteLayout.LayoutFlags="All"></Button>
                </StackLayout>
                <StackLayout HorizontalOptions="FillAndExpand">
                    <Label FontFamily="{StaticResource AkagiProExtraBold}" Text="Log in" FontAttributes="Bold" FontSize="25" TextColor="White" />
                    <Label  FontFamily="{StaticResource AkagiProExtraBold}" Text="Log in" FontAttributes="Bold" FontSize="25" TextColor="Transparent" />
                    <Entry Text="{Binding UserName.Value, Mode=TwoWay}" BackgroundColor="Transparent" TextColor="White" x:Name="userEmailEntry"  FontSize="Medium" PlaceholderColor="LightBlue" Placeholder="Email" Keyboard="Email" >
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateUserNameCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Margin="{OnPlatform Android='0,-8,0,0', iOS='0,0,0,0'}" BackgroundColor="Transparent"  Text="{Binding UserName.Errors,  Converter={StaticResource ValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />
                    <Entry  BackgroundColor="Transparent" Text="{Binding Password.Value, Mode=TwoWay}" TextColor="White" x:Name="passwordEntry" FontFamily="{StaticResource AkagiProMedium}" FontSize="Medium" PlaceholderColor="LightBlue" Placeholder="Password" IsPassword="True" >
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidatePasswordCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding Password.IsValid}" Value="False">
                            <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Margin="{OnPlatform Android='0,-8,0,0', iOS='0,0,0,0'}" BackgroundColor="Transparent" Text="{Binding Password.Errors,  Converter={StaticResource ValidationErrorConverter}}" Style="{StaticResource ValidationErrorLabelStyle}" />

                </StackLayout>
                <Button x:Name="btnContinue" IsVisible="{Binding IsButtonVisible}" Command="{Binding LogInClicked}" VerticalOptions="EndAndExpand" Style="{StaticResource Accent2ColorButtonStyle}" Text="Continue" />
                <Button x:Name="btnPasswordReset" IsVisible="{Binding IsButtonVisible}" Command="{Binding PasswordResetClicked}" Style="{StaticResource TransparentButtonStyle}" Text="Reset Password"  Margin="0,2,0,0" />
            </renderers:GradientLayout>
            <ContentView x:Name="popupLoadingView" BackgroundColor="#6600" Padding="10, 0" IsVisible="{Binding IsLoading}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" AbsoluteLayout.LayoutBounds="0, 0, 1, 1" AbsoluteLayout.LayoutFlags="All">
                <ActivityIndicator x:Name="activityIndicator"  IsVisible="{Binding IsLoading}" IsRunning="{Binding IsLoading}" Margin="0,0,0,0" VerticalOptions="Center" HorizontalOptions="Center" Color="DarkBlue" WidthRequest="50" HeightRequest="50"></ActivityIndicator>
            </ContentView>
        </AbsoluteLayout>

    </ContentPage.Content>
</ContentPage>